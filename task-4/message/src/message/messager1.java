package message;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * messager1.java
 *
 * Created on Nov 1, 2019, 12:41:54 PM
 */




import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author class-12
 */
public class messager1 extends javax.swing.JFrame {
static String id,id2;
static ServerSocket ss;static int i=1200;
public String gid,gid2;
static Socket s;
static DataInputStream din;
static DataOutputStream dout;
    /** Creates new form messager1 */
    public messager1() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("cleint");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("delete chat");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, 0, 0, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String msg = jTextArea2.getText();
            jTextArea1.append(" me:" + msg + "\n");
             Connection con=message.getConnection();
             Statement s1=con.createStatement();
            dout = new DataOutputStream(s.getOutputStream());
            dout.writeUTF(msg);
                
    try{s1.executeUpdate("insert into msg_"+id+"_"+id2+"(id,msg,"+id+","+id2+")values('"+id+"','"+msg+"','read','unread');");}
    catch(Exception e){
    s1.executeUpdate("insert into msg_"+id2 +"_"+id+"(id,msg,"+id+","+id2+")values('"+id+"','"+msg+"','read','unread');");
}}
catch (Exception ex) {
            Logger.getLogger(messager1.class.getName()).log(Level.SEVERE, null, ex);
        }
jTextArea2.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
System.out.println(id);
        System.out.println(id2+"ll");
        id2=gid2;
id=gid;
        try{
    Connection con=message.getConnection();
    Statement s1=con.createStatement();
    ResultSet r;
    System.out.println(id+"    "+id2);
    try{r=s1.executeQuery("select * from msg_"+id+"_"+id2+";");
        while (r.next()){
        
        String msg=r.getString("msg");
        String sender=r.getString("id");
        if(sender.equals(id)){sender="me";}
        String delete=r.getString(id);
        jTextArea1.append(sender+":"+msg+"\n");
        if(delete.equals("delete")){jTextArea1.setText("");}
    }

    s1.executeUpdate("update msg_"+id+"_"+id2+" set "+id+"=\"read\" where "+id+"='unread';");}catch(Exception e){
     r=s1.executeQuery("select * from msg_"+id2+"_"+id+";");
    while (r.next()){
        String msg=r.getString("msg");
        String sender=r.getString("id");
        String delete=r.getString(id);
        jTextArea1.append(sender+":"+msg+"\n");
        if(delete.equals("delete")){jTextArea1.setText("");}
    }
    s1.executeUpdate("update msg_"+id2+"_"+id+" set "+id+"=\"read\" where "+id+"='unread';");
    }
}
catch(Exception e){
    System.out.println(e);
}
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus

    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
      // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
   try{
      Connection con=message.getConnection();
      Statement s1=con .createStatement();
      try{
      s1.executeUpdate("update msg_"+id+"_"+id2+"set "+id+"='delete' where "+id+"='read';");}
      catch(Exception e){
          s1.executeUpdate("update msg_"+id2+"_"+id+"set "+id+"='delete' where "+id+"='read';");
      }
  }
  catch(Exception e){}
   jTextArea1.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
main_page a=new main_page();
a.u_name=id;
a.setVisible(true);
this.dispose();

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new messager1().setVisible(true);
                
            }
        });
        System.out.println("okay");
        try {s = new Socket("127.0.0.1",1200);
        din=new DataInputStream(s.getInputStream());
        dout=new DataOutputStream(s.getOutputStream());
        String msgin="";
        
        while(!msgin.equals("exit")){msgin=din.readUTF();
               jTextArea1.append(id2+": "+msgin+"\n");
            Connection con=message.getConnection();
      Statement s1=con .createStatement();
      try{

      s1.executeUpdate("update msg_"+id+"_"+id2+" set "+id+"='read' where "+id+"='unread';");}
      catch(Exception e){
          s1.executeUpdate("update msg_"+id2+"_"+id+" set "+id+"='read' where "+id+"='unread';");
      }
               
            }}
        catch(Exception e){

        if(e.toString().equals("java.net.ConnectException: Connection refused: connect")){
              String msgin="" ;
       try{
           ss=new ServerSocket(i);
           s=ss.accept();
System.out.println("server on");
           din=new DataInputStream(s.getInputStream());
           dout=new DataOutputStream(s.getOutputStream());

           while(true){
               msgin=din.readUTF();
               jTextArea1.append(id2+": "+msgin+"\n");
Connection con=message.getConnection();
      Statement s1=con .createStatement();
      try{

      s1.executeUpdate("update msg_"+id+"_"+id2+" set "+id+"='read' where "+id+"='unread';");}
      catch(Exception ex){
          s1.executeUpdate("update msg_"+id2+"_"+id+" set "+id+"='read' where "+id+"='unread';");
      }
               if(msgin.equals("exit")){
                   ss.close();
               }
                
           }

       }
       catch(Exception o){System.out.print(o+"pp");
        }
          }
else if(e.toString().equals("java.net.SocketException: Connection reset")){
              String msgin="" ;
       try{
           ss=new ServerSocket(1200);
           s=ss.accept();
System.out.println("server on");
           din=new DataInputStream(s.getInputStream());
           dout=new DataOutputStream(s.getOutputStream());
Connection con=message.getConnection();
      Statement s1=con .createStatement();
           while(true){
               msgin=din.readUTF();

               jTextArea1.append(id2+": "+msgin+"\n");
               try{

      s1.executeUpdate("update msg_"+id+"_"+id2+" set "+id+"='read' where "+id+"='unread';");}
      catch(Exception ex){
          s1.executeUpdate("update msg_"+id2+"_"+id+" set "+id+"='read' where "+id+"='unread';");
      }
                if(msgin.equals("exit")){
                   s.close();
               } 
      
           }

       }
       catch(Exception o){System.out.print(o +"ll");
        }
          }
          else{System.out.println(e+"kk");}}

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

}
